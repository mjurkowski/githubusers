{"version":3,"sources":["components/UsersList/UsersListItem.tsx","components/Loader.tsx","components/UsersList/UsersList.tsx","routes/history.ts","components/BackButton.tsx","components/NavBar.tsx","components/Layout.tsx","services/api/api-client.ts","helpers/serializers/user.ts","routes/home/Home.tsx","routes/profile/Profile.tsx","hooks/use-promise.ts","routes/search/Search.tsx","routes/Router.tsx","App.tsx","index.tsx"],"names":["UsersListItem","user","className","to","login","src","avatar","width","height","alt","Loader","style","role","UsersList","hasNextPage","users","isNextPageLoading","onLoadMore","itemCount","length","loadMoreItems","isItemLoaded","index","Item","content","onItemsRendered","ref","itemSize","history","createBrowserHistory","basename","pastLocations","goBackOrReplace","location","goBack","replace","listen","action","push","pop","appLocation","pathname","BackButton","href","onClick","e","preventDefault","NavBar","rightBtn","Layout","children","getQueryString","params","Object","keys","map","key","join","process","headers","Headers","API_URL","ApiClient","query","page","fetch","q","then","response","json","since","serializeUser","id","avatar_url","url","Home","useState","isLoading","setIsLoading","setUsers","getUsers","Profile","useParams","promise","runImmediately","isProcessing","setIsProcessing","resolveResult","setResolveResult","rejectReason","setRejectReason","caller","r","catch","error","useLayoutEffect","usePromise","useCallback","getUser","isProfileLoading","name","email","bio","followers","following","public_repos","public_gists","Search","setQuery","useRef","timeout","type","value","onChange","target","current","clearTimeout","setTimeout","placeholder","searchUsers","total_count","items","Router","path","component","exact","App","ReactDOM","render","document","getElementById"],"mappings":"gRAQaA,EAAkC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChD,OAAKA,EAKH,yBAAKC,UAAU,cACb,kBAAC,IAAD,CAAMC,GAAE,mBAAcF,EAAKG,OAASF,UAAU,6BAC5C,yBAAKG,IAAKJ,EAAKK,OAAQJ,UAAU,OAAOK,MAAM,KAAKC,OAAO,KAAKC,IAAI,WACnE,yBAAKP,UAAU,cACb,4BAAKD,EAAKG,UART,MCREM,EAAmB,kBAC9B,yBAAKR,UAAU,WAAWS,MAAO,CAAEH,OAAQ,SACzC,yBAAKN,UAAU,0DAA0DU,KAAK,cAAcD,MAAO,CAAEJ,MAAO,SAA5G,gBCYSM,EAA8B,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,kBAAmBC,EAAiB,EAAjBA,WAC7EC,EAAYJ,EAAcC,EAAMI,OAAS,EAAIJ,EAAMI,OAEnDC,EAAgBJ,EAAoB,aAAWC,EAE/CI,EAAe,SAACC,GAAD,OAA6BR,GAAeQ,EAAQP,EAAMI,QAEzEI,EAAO,SAAC,GAA2B,IACnCC,EADUF,EAAwB,EAAxBA,MAAOX,EAAiB,EAAjBA,MAQrB,OAHEa,EAHGH,EAAaC,GAGN,kBAAC,EAAD,CAAerB,KAAMc,EAAMO,KAF3B,kBAAC,EAAD,MAKL,yBAAKX,MAAOA,GAAQa,IAG7B,OACE,kBAAC,IAAD,MACG,gBAAGhB,EAAH,EAAGA,OAAQD,EAAX,EAAWA,MAAX,OACC,kBAAC,IAAD,CACEc,aAAcA,EACdH,UAAWA,EACXE,cAAeA,IAEd,gBAAGK,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,IAApB,OACC,kBAAC,IAAD,CACER,UAAWA,EACXS,SAAU,GACVF,gBAAiBA,EACjBC,IAAKA,EACLnB,MAAOA,EACPC,OAAQA,GAEPe,U,OCjDFK,EAAUC,YAAqB,CAC1CC,SAAkD,iBAGhDC,EAA4B,GAgCzB,SAASC,EAAgBC,GAHvBF,EAAcZ,OAAS,EAK5BS,EAAQM,SAERN,EAAQO,QAAQF,GAVpBL,EAAQQ,QAzBR,SAA6BH,EAAoBI,GAC/C,OAAQA,GACN,IAAK,OAEHN,EAAcO,KAAKL,GACnB,MACF,IAAK,UAEHF,EAAcA,EAAcZ,OAAS,GAAKc,EAC1C,MACF,IAAK,MAEHF,EAAcQ,MAEd,IAAMC,EAAcT,EAAcA,EAAcZ,OAAS,GACnDqB,GAAeA,EAAYC,WAAaR,EAASQ,WAGrDV,EAAgB,CAACE,QCtBlB,IAAMS,EAAuB,WAMlC,OAAO,uBAAGC,KAAK,IAAIzC,UAAU,WAAW0C,QALpB,SAACC,GACnBA,EAAEC,iBACFd,EAAgB,OAGX,SCDIe,EAA2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtC,yBAAK9C,UAAU,8BACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAChC,0CADF,UAGA,wBAAID,UAAU,cACZ,wBAAIA,UAAU,eACX8C,GAAY,kBAAC,EAAD,UCRRC,EAA2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUF,EAAb,EAAaA,SAAb,OACtC,oCACE,kBAAC,EAAD,CAAQA,SAAUA,IAClB,yBAAK9C,UAAU,4BACZgD,K,gBCXP,SAASC,EAAgDC,GACvD,OAAOC,OAAOC,KAAKF,GAAQG,KAAI,SAAAC,GAAG,OAAIA,EAAM,IAAMJ,EAAOI,MAAMC,KAAK,KA+BpD,SAAhB,OAHYC,4CAAd,IAMMC,EAAU,IAAIC,QAA8D,IAG5EC,EAAU,yBAEHC,EAAb,yGAEqBC,GAA0F,wDAAC,IAAxDC,EAAuD,uDAAxC,EACnE,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,yBAA4BV,EAAe,CAAEe,EAAGH,EAAOC,UAAW,CAAEL,YAAWQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YAHzH,iCAM8D,IAA5CC,EAA2C,uDAA3B,EAC9B,OAAOL,MAAM,GAAD,OAAIJ,EAAJ,kBAAqBV,EAAe,CAAEmB,WAAY,CAAEX,YAAWQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YAPzG,8BAUiBjE,GACb,OAAO6D,MAAM,GAAD,OAAIJ,EAAJ,kBAAqBzD,GAAS,CAAEuD,YAAWQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,cAXrF,KCrCaE,EAAgB,SAAC,GAAD,MAAiE,CAC5FnE,MAD2B,EAAGA,MAE9BoE,GAF2B,EAAUA,GAGrClE,OAH2B,EAAcmE,WAIzCC,IAJ2B,EAAkCA,MCKlDC,EAAiB,WAAO,IAAD,EACAC,oBAAS,GADT,mBAC3BC,EAD2B,KAChBC,EADgB,OAERF,mBAAkB,IAFV,mBAE3B7D,EAF2B,KAEpBgE,EAFoB,KAalC,OACE,kBAAC,EAAD,CAAQ/B,SAAU,kBAAC,IAAD,CAAM9C,UAAU,WAAWC,GAAG,WAA9B,WAChB,yBAAKD,UAAU,yBACb,kBAAC,EAAD,CAAWa,MAAOA,EAAOC,kBAAmB6D,EAAW/D,aAAW,EAACG,WAZlD,WACrB6D,GAAa,GACb,IAAMR,EAAQvD,EAAMI,OAASJ,EAAMA,EAAMI,OAAS,GAAGqD,GAAK,EAC1DV,EAAUkB,SAASV,GAAOH,MAAK,SAACC,GAC9BW,EAAS,GAAD,mBAAKhE,GAAL,YAAeqD,EAASb,IAAIgB,MACpCO,GAAa,YCPZ,IAAMG,EAAwB,WAAO,IAClC7E,EAAU8E,cAAV9E,MADiC,ECGpC,SACL+E,GAEyD,IADzDC,EACwD,0DAChBR,oBAAS,GADO,mBACjDS,EADiD,KACnCC,EADmC,OAEdV,mBAAmB,MAFL,mBAEjDW,EAFiD,KAElCC,EAFkC,OAGhBZ,mBAAS,MAHO,mBAGjDa,EAHiD,KAGnCC,EAHmC,KAKlDC,EAAS,WACbL,GAAgB,GAChBE,EAAiB,MACjBE,EAAgB,MAEhBP,IACGhB,MAAK,SAAAyB,GACJN,GAAgB,GAChBE,EAAiBI,MAElBC,OAAM,SAAAC,GACLR,GAAgB,GAChBI,EAAgBI,OAWtB,OAPAC,2BAAgB,WACVX,GACFO,MAGD,IAEI,CAACA,EAAQN,EAAcE,EAAeE,GD1BVO,CALLC,uBAC5B,kBAAM7F,GAAS0D,EAAUoC,QAAQ9F,KACjC,CAACA,KAKD,GAVuC,mBAQhC+F,EARgC,KAQdlG,EARc,KAazC,OAAIkG,EACK,kBAAC,EAAD,mBAIP,kBAAC,EAAD,KACE,yBAAKjG,UAAU,8BACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,sBACb,mCAAKD,QAAL,IAAKA,OAAL,EAAKA,EAAMmG,MACX,2BACE,sCACGnG,QADH,IACGA,OADH,EACGA,EAAMG,MADT,aACmBH,QADnB,IACmBA,OADnB,EACmBA,EAAMoG,QAG3B,2BACE,yCADF,WAC0BpG,QAD1B,IAC0BA,OAD1B,EAC0BA,EAAMqG,MAGlC,yBAAKpG,UAAU,kCACb,gCACE,yBACEG,IAAG,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAMwE,WACXhE,IAAI,GACJP,UAAU,oCAKlB,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,+BACb,4BACE,uCAASD,QAAT,IAASA,OAAT,EAASA,EAAMsG,YAEjB,2BACE,8CAGJ,yBAAKrG,UAAU,+BACb,4BACE,uCAASD,QAAT,IAASA,OAAT,EAASA,EAAMuG,YAEjB,2BACE,8CAGJ,yBAAKtG,UAAU,+BACb,4BACE,uCAASD,QAAT,IAASA,OAAT,EAASA,EAAMwG,eAEjB,2BACE,iDAGJ,yBAAKvG,UAAU,+BACb,4BACE,uCAASD,QAAT,IAASA,OAAT,EAASA,EAAMyG,eAEjB,2BACE,gDE5ELC,EAAmB,WAAO,IAAD,EACV/B,mBAAS,IADC,mBAC7Bb,EAD6B,KACtB6C,EADsB,KAE9B5C,EAAO6C,iBAAO,GACdC,EAAUD,iBAA8B,MACxC/F,EAAc+F,mBAAS9C,GAJO,EAKFa,oBAAS,GALP,mBAK7BC,EAL6B,KAKlBC,EALkB,OAMVF,mBAAkB,IANR,mBAM7B7D,EAN6B,KAMtBgE,EANsB,KAsCpC,OACE,kBAAC,EAAD,KACE,yBAAK7E,UAAU,cACb,2BAAO6G,KAAK,OAAO7G,UAAU,eAAe8G,MAAOjD,EAAOkD,SAjB3C,SAACpE,GACpB+D,EAAS/D,EAAEqE,OAAOF,OAClBlG,EAAYqG,QAAoB,KAAVpD,EACtBC,EAAKmD,QAAU,EAEXL,EAAQK,SACVC,aAAaN,EAAQK,SAGvBL,EAAQK,QAAUE,YAAW,WAC3BtC,EAAS,MACR,MAMmFuC,YAAY,gBAC9F,2BAAOpH,UAAU,wBAAjB,uCAEF,yBAAKA,UAAU,yBACZ6D,GAAS,kBAAC,EAAD,CACRhD,MAAOA,EACPC,kBAAmB6D,EACnB/D,YAAaA,EAAYqG,QACzBlG,WAzCe,WAChB8C,IAGLe,GAAa,GACbd,EAAKmD,QAAUnD,EAAKmD,QAAU,EAC9BrD,EAAUyD,YAAYxD,EAhBD,GAgB0BC,EAAKmD,SACjDhD,MAAK,SAAAC,GACJtD,EAAYqG,QAlBK,GAmBfnD,EAAKmD,QAA6B/C,EAASoD,YAC7CzC,EAAS,GAAD,mBAAKhE,GAAL,YAAeqD,EAASqD,MAAMlE,IAAIgB,MAC1CO,GAAa,MAEde,OAAM,kBAAMf,GAAa,aChBnB4C,EAA2B,WACtC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UAAUC,UAAWjB,IACjC,kBAAC,IAAD,CAAOgB,KAAK,kBAAkBC,UAAW3C,IACzC,kBAAC,IAAD,CAAO0C,KAAK,IAAIE,OAAK,GAAC,kBAAC,EAAD,OACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU1H,GAAI,CACZsC,SAAU,UCRLqF,MARf,WACE,OACE,kBAAC,IAAD,CAAQlG,QAASA,GACf,kBAAC,EAAD,QCANmG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c10ecd28.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IUser } from '../../interfaces';\n\ninterface IProps {\n  user: IUser;\n}\n\nexport const UsersListItem: React.FC<IProps> = ({ user }) => {\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div className=\"media mb-1\">\n      <Link to={`/profile/${user.login}`} className=\"d-flex align-items-center\">\n        <img src={user.avatar} className=\"mr-3\" width=\"50\" height=\"50\" alt=\"avatar\" />\n        <div className=\"media-body\">\n          <h5>{user.login}</h5>\n        </div>\n      </Link>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport const Loader: React.FC = () => (\n  <div className=\"progress\" style={{ height: '20px' }}>\n    <div className=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" style={{ width: '100%' }}>Loading...</div>\n  </div>\n)\n","import React from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport InfiniteLoader from 'react-window-infinite-loader';\n\nimport { IUser } from '../../interfaces';\nimport { UsersListItem } from './UsersListItem';\nimport { Loader } from '../Loader';\n\ninterface IProps {\n  hasNextPage: boolean;\n  isNextPageLoading: boolean;\n  users: IUser[];\n  onLoadMore(): void;\n}\n\nexport const UsersList: React.FC<IProps> = ({ hasNextPage, users, isNextPageLoading, onLoadMore }) => {\n  const itemCount = hasNextPage ? users.length + 1 : users.length;\n\n  const loadMoreItems = isNextPageLoading ? () => {} : onLoadMore;\n \n  const isItemLoaded = (index: number): boolean => !hasNextPage || index < users.length;\n\n  const Item = ({ index, style }: any) => {\n    let content;\n    if (!isItemLoaded(index)) {\n      content = <Loader/>;\n    } else {\n      content = <UsersListItem user={users[index]} />;\n    }\n  \n    return <div style={style}>{content}</div>;\n  };\n\n  return (\n    <AutoSizer>\n      {({ height, width }) => (\n        <InfiniteLoader\n          isItemLoaded={isItemLoaded}\n          itemCount={itemCount}\n          loadMoreItems={loadMoreItems as any}\n        >\n          {({ onItemsRendered, ref }) => (\n            <List\n              itemCount={itemCount}\n              itemSize={54}\n              onItemsRendered={onItemsRendered}\n              ref={ref}\n              width={width}\n              height={height}\n            >\n              {Item}\n            </List>\n          )}\n        </InfiniteLoader>\n      )}\n    </AutoSizer>\n  )\n}\n","import { createBrowserHistory, Action } from 'history';\n\nexport const history = createBrowserHistory({\n  basename: process.env.NODE_ENV === 'production' ? '/githubusers' : '/'\n});\n\nlet pastLocations: Location[] = [];\nfunction updatePastLocations(location: Location, action: Action) {\n  switch (action) {\n    case 'PUSH':\n      // first location when app loads and when pushing onto history\n      pastLocations.push(location);\n      break;\n    case 'REPLACE':\n      // only when using history.replace\n      pastLocations[pastLocations.length - 1] = location;\n      break;\n    case 'POP': {\n      // happens when using the back button, or forward button\n      pastLocations.pop();\n      // location according to pastLocations\n      const appLocation = pastLocations[pastLocations.length - 1];\n      if (!(appLocation && appLocation.pathname === location.pathname)) {\n        // If the current location doesn't match what the app thinks is the current location,\n        // blow up the app history.\n        pastLocations = [location];\n      }\n      break;\n    }\n    default:\n  }\n}\nhistory.listen(updatePastLocations as any);\n\nfunction isPreviousLocationWithinApp(): boolean {\n  return pastLocations.length > 1;\n}\n\nexport function goBackOrReplace(location: string): void {\n  if (isPreviousLocationWithinApp()) {\n    history.goBack();\n  } else {\n    history.replace(location);\n  }\n}\n","import React from 'react';\nimport { goBackOrReplace } from '../routes/history';\n\nexport const BackButton: React.FC = () => {\n  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    goBackOrReplace('/');\n  }\n\n  return <a href=\"/\" className=\"nav-link\" onClick={handleClick}>Back</a>\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BackButton } from './BackButton';\n\ninterface IProps {\n  rightBtn: React.ReactNode;\n}\n\nexport const NavBar: React.FC<IProps> = ({ rightBtn }) => (\n  <nav className=\"navbar navbar-dark bg-dark\">\n    <Link className=\"navbar-brand\" to=\"/\">\n      <strong>GitHub</strong> Users\n    </Link>\n    <ul className=\"navbar-nav\">\n      <li className=\"navbar-item\">\n        {rightBtn || <BackButton/>}\n      </li>\n    </ul>\n  </nav>\n) \n","import React from 'react';\nimport { NavBar } from './NavBar';\n\ninterface IProps {\n  rightBtn?: React.ReactNode;\n}\n\nexport const Layout: React.FC<IProps> = ({ children, rightBtn }) => (\n  <>\n    <NavBar rightBtn={rightBtn}/>\n    <div className=\"container pt-5 flex-fill\">\n      {children}\n    </div>\n  </>\n) \n","function getQueryString<T extends { [key: string]: any}>(params: T): string {\n  return Object.keys(params).map(key => key + '=' + params[key]).join('&');\n}\n\nexport interface IGitHubUser {\n  login: string;\n  id: number;\n  avatar_url: string;\n  url: string;\n  html_url: string;\n  name: string;\n}\n\nexport interface IFullGitHubUser extends IGitHubUser {\n  email: string;\n  hireable: boolean;\n  bio: string;\n  public_repos: number;\n  public_gists: number;\n  followers: number;\n  following: number;\n}\n\ninterface IGitHubSearchUsersResponse {\n  total_count: number;\n  incomplete_results: boolean;\n  items: IGitHubUser[];\n}\n\nconst TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\n\nconst authHeaders = {\n  'Authorization': `token ${TOKEN}`\n};\n\nconst headers = new Headers(process.env.NODE_ENV !== 'production' ? authHeaders : {});\n\n\nconst API_URL = 'https://api.github.com';\n\nexport class ApiClient {\n  \n  static searchUsers(query: string, limit: number = 20, page: number = 0): Promise<IGitHubSearchUsersResponse> {\n    return fetch(`${API_URL}/search/users?${getQueryString({ q: query, page })}`, { headers }).then(response => response.json())\n  }\n\n  static getUsers(since: number = 0): Promise<IGitHubUser[]> {\n    return fetch(`${API_URL}/users?${getQueryString({ since })}`, { headers }).then(response => response.json())\n  }\n\n  static getUser(login: string): Promise<IGitHubUser> {\n    return fetch(`${API_URL}/users/${login}`, { headers }).then(response => response.json())\n  }\n}\n","import { IGitHubUser } from '../../services/api/api-client';\nimport { IUser } from '../../interfaces';\n\nexport const serializeUser = ({ login, id, avatar_url: avatar, url }: IGitHubUser): IUser => ({\n  login,\n  id, \n  avatar, \n  url\n}) ;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { UsersList, Layout } from '../../components/';\nimport { ApiClient } from '../../services/api/api-client';\nimport { serializeUser } from '../../helpers/serializers';\nimport { IUser } from '../../interfaces';\n\nexport const Home: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState<IUser[]>([]);\n\n  const handleLoadMore = () => {\n    setIsLoading(true);\n    const since = users.length ? users[users.length - 1].id : 0;\n    ApiClient.getUsers(since).then((response) => {\n      setUsers([...users, ...response.map(serializeUser)])\n      setIsLoading(false);\n    })\n  };\n\n  return (\n    <Layout rightBtn={<Link className=\"nav-link\" to=\"/search\">Search</Link>}>\n      <div className=\"layout-list-container\">\n        <UsersList users={users} isNextPageLoading={isLoading} hasNextPage onLoadMore={handleLoadMore} />\n      </div>\n    </Layout>\n  )\n}\n","import React, { useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  ApiClient,\n  IFullGitHubUser,\n} from '../../services/api/api-client';\nimport { usePromise } from '../../hooks/';\nimport { Layout } from '../../components/';\n\nexport const Profile: React.FC<{}> = () => {\n  const { login } = useParams();\n\n  const getUserProfilePromise = useCallback(\n    () => login && ApiClient.getUser(login),\n    [login]\n  );\n\n  const [, isProfileLoading, user] = usePromise<IFullGitHubUser>(\n    getUserProfilePromise as any,\n    true\n  );\n\n  if (isProfileLoading) {\n    return <Layout>Loading...</Layout>;\n  }\n\n  return (\n    <Layout>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8 col-lg-6\">\n          <div className=\"well profile\">\n            <div className=\"row\">\n              <div className=\"col-xs-12 col-sm-8\">\n                <h2>{user?.name}</h2>\n                <p>\n                  <small>\n                    {user?.login} | {user?.email}\n                  </small>\n                </p>\n                <p>\n                  <strong>Bio: </strong> {user?.bio}\n                </p>\n              </div>\n              <div className=\"col-xs-12 col-sm-4 text-center\">\n                <figure>\n                  <img\n                    src={user?.avatar_url}\n                    alt=\"\"\n                    className=\"img-thumbnail img-responsive\"\n                  />\n                </figure>\n              </div>\n            </div>\n            <div className=\"row divider text-center\">\n              <div className=\"col-xs-12 col-sm-3 emphasis\">\n                <h2>\n                  <strong>{user?.followers}</strong>\n                </h2>\n                <p>\n                  <small>Followers</small>\n                </p>\n              </div>\n              <div className=\"col-xs-12 col-sm-3 emphasis\">\n                <h2>\n                  <strong>{user?.following}</strong>\n                </h2>\n                <p>\n                  <small>Following</small>\n                </p>\n              </div>\n              <div className=\"col-xs-12 col-sm-3 emphasis\">\n                <h2>\n                  <strong>{user?.public_repos}</strong>\n                </h2>\n                <p>\n                  <small>Repositories</small>\n                </p>\n              </div>\n              <div className=\"col-xs-12 col-sm-3 emphasis\">\n                <h2>\n                  <strong>{user?.public_gists}</strong>\n                </h2>\n                <p>\n                  <small>Gists</small>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n","import { useLayoutEffect, useState } from 'react';\n\ntype isProcessing = boolean;\ntype result<T> = T;\ntype rejectReason = any;\ntype caller = () => void;\n\n/**\n * This hook help allow to control of the promise running and state of execution.\n * You can check if it finish with positive scenario or with exception.\n * @param {() => Promise} promise caller to the promise\n * @param {boolean} [runImmediately=false] if hook should run before first component render, then should be `true`\n */\nexport function usePromise<T>(\n  promise: (...args: any[]) => Promise<T>,\n  runImmediately: boolean = false\n): [caller, isProcessing, result<T | null>, rejectReason] {\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [resolveResult, setResolveResult] = useState<T | null>(null);\n  const [rejectReason, setRejectReason] = useState(null);\n\n  const caller = (): void => {\n    setIsProcessing(true);\n    setResolveResult(null);\n    setRejectReason(null);\n\n    promise()\n      .then(r => {\n        setIsProcessing(false);\n        setResolveResult(r);\n      })\n      .catch(error => {\n        setIsProcessing(false);\n        setRejectReason(error);\n      });\n  };\n\n  useLayoutEffect(() => {\n    if (runImmediately) {\n      caller();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return [caller, isProcessing, resolveResult, rejectReason];\n}\n","import React, { useState, useRef } from 'react';\nimport { ApiClient } from '../../services/api/api-client';\nimport { UsersList, Layout } from '../../components/';\nimport { serializeUser } from '../../helpers/serializers';\nimport { IUser } from '../../interfaces';\n\nconst RESULTS_PER_PAGE = 50;\n\nexport const Search: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const page = useRef(0);\n  const timeout = useRef<NodeJS.Timeout | null>(null);\n  const hasNextPage = useRef(!!query);\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState<IUser[]>([]);\n\n  const handleLoadMore = () => {\n    if (!query) {\n      return;\n    }\n    setIsLoading(true);\n    page.current = page.current + 1;\n    ApiClient.searchUsers(query, RESULTS_PER_PAGE, page.current)\n      .then(response => {\n        hasNextPage.current =\n          page.current * RESULTS_PER_PAGE < response.total_count;\n        setUsers([...users, ...response.items.map(serializeUser)]);\n        setIsLoading(false);\n      })\n      .catch(() => setIsLoading(false));\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    hasNextPage.current = query !== '';\n    page.current = 0;\n\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n    }\n\n    timeout.current = setTimeout(() => {\n      setUsers([]);\n    }, 500);\n  };\n\n  return (\n    <Layout>\n      <div className=\"form-group\">\n        <input type=\"text\" className=\"form-control\" value={query} onChange={handleChange} placeholder=\"Search user\" />\n        <small className=\"form-text text-muted\">You can use nick name or full name</small>\n      </div>\n      <div className=\"layout-list-container\">\n        {query && <UsersList\n          users={users}\n          isNextPageLoading={isLoading}\n          hasNextPage={hasNextPage.current}\n          onLoadMore={handleLoadMore}\n        />}\n        \n      </div>\n    </Layout>\n  );\n};\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\n\nimport { Home } from './home';\nimport { Profile } from './profile';\nimport { Search } from './search';\n\ninterface IProps {}\n\nexport const Router: React.FC<IProps> = () => {\n  return (\n    <Switch>\n      <Route path=\"/search\" component={Search}/>\n      <Route path=\"/profile/:login\" component={Profile}/>\n      <Route path=\"/\" exact><Home/></Route>\n      <Route>\n        <Redirect to={{\n          pathname: '/'\n        }} />\n      </Route>\n    </Switch>\n  )\n}\n","import React from 'react';\nimport { Router } from 'react-router-dom';\n\nimport { Router as AppRouter, history } from './routes';\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <AppRouter />\n    </Router>\n  );\n}\n\nexport default App;\n","import '../node_modules/bootstrap/dist/css/bootstrap.css'\nimport './style.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}